import React, { useState } from 'react';
import { Layout, Row, Col, Input, Button, List, Checkbox, Typography, Modal, Form, Input as InputAnt, message, Space } from 'antd';
import { EditOutlined, DeleteOutlined } from '@ant-design/icons';

const { Header, Content, Footer } = Layout;
const { Title } = Typography;

// TodoInput Component (same as before)
// ... (code for TodoInput)

// TodoList Component
const TodoList = ({ todos, onDeleteTodo, onToggleComplete, onEditTodo, filter, setFilter, onDeleteDone, onDeleteAll }) => {
  const [isEditing, setIsEditing] = useState(false);
  const [editingTodo, setEditingTodo] = useState(null);

  const handleEditTodo = (todo) => {
    setIsEditing(true);
    setEditingTodo(todo);
  };

  const handleCancelEdit = () => {
    setIsEditing(false);
    setEditingTodo(null);
  };

  const handleSaveEdit = (values) => {
    onEditTodo(editingTodo.id, values.text);
    setIsEditing(false);
    setEditingTodo(null);
  };

  const filteredTodos = filter === 'all'
    ? todos
    : filter === 'completed'
    ? todos.filter((todo) => todo.completed)
    : todos.filter((todo) => !todo.completed);

  return (
    <div style={{ textAlign: 'center' }}>
      <Title level={3}>To-Do List</Title>
      <div style={{ marginBottom: 16, display: 'flex', justifyContent: 'space-between' }}>
        <Button onClick={() => setFilter('all')} type={filter === 'all' ? 'primary' : 'default'} style={{ backgroundColor: '#00a0e9', border: 'none', textAlign: 'left' }}>
          All
        </Button>
        <Button onClick={() => setFilter('completed')} type={filter === 'completed' ? 'primary' : 'default'} style={{ backgroundColor: '#00a0e9', border: 'none' }}>
          Completed
        </Button>
        <Button onClick={() => setFilter('active')} type={filter === 'active' ? 'primary' : 'default'} style={{ backgroundColor: '#00a0e9', border: 'none', textAlign: 'right' }}>
          Active
        </Button>
      </div>
      <List
        itemLayout="horizontal"
        dataSource={filteredTodos}
        renderItem={(item) => (
          <List.Item>
            <List.Item.Meta
              title={
                <span style={{ textDecoration: item.completed ? 'line-through' : 'none', backgroundColor: item.completed ? '#f0f0f0' : 'transparent' }}>
                  {item.text}
                </span>
              }
            />
            <Space>
              <Checkbox checked={item.completed} onChange={() => onToggleComplete(item.id)} />
              <Button type="primary" onClick={() => handleEditTodo(item)} icon={<EditOutlined />} />
              <Button type="danger" onClick={() => onDeleteTodo(item.id)} icon={<DeleteOutlined />} />
            </Space>
          </List.Item>
        )}
      />
      <Modal
        title="Edit Task"
        visible={isEditing}
        onCancel={handleCancelEdit}
        footer={[
          <Button key="back" onClick={handleCancelEdit}>
            Cancel
          </Button>,
          <Button key="submit" type="primary" onClick={() => handleSaveEdit}>
            Save
          </Button>,
        ]}
      >
        <Form
          name="edit-todo-form"
          initialValues={{ text: editingTodo ? editingTodo.text : '' }}
          onFinish={handleSaveEdit}
        >
          <Form.Item name="text" label="Task" rules={[{ required: true }]}>
            <InputAnt />
          </Form.Item>
        </Form>
      </Modal>
    </div>
  );
};

// App Component (same as before)
// ... (code for App)

export default App;
